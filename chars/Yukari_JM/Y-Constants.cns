; _____________________________________
;| Yukari Tanizaki from Azumanga Daioh |
;|             by Wickydoo
;edited by me for the computer             |
; ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
;===================<CONSTANTS>================

;---------------------------------------------------------------------
[Data]
life = 1000
attack = 100
defence = 100
power = 5000
fall.defence_up = 0
liedown.time = 20
airjuggle = 1
sparkno = S15000
guard.sparkno = S15010
KO.echo = 0
volume = 255
IntPersistIndex = 58
FloatPersistIndex = 40

[Size]
xscale = 1           ;Horizontal scaling factor.
yscale = 1           ;Vertical scaling factor.
ground.back = 15     ;Player width (back, ground)
ground.front = 18
air.back = 15        ;Player width (back, air)
air.front = 18       ;Player width (front, air)
height = 60          ;Height of player (for opponent to jump over)
attack.dist = 160    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = -5, -90   ;Approximate position of head
mid.pos = -5, -60    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 2      ;Walk forward
walk.back = -1.5     ;Walk backward
run.fwd  = 6, 0    ;Run forward (x, y)
run.back = -4.5,-3.8 ;Hop backward (x, y)
jump.neu = 0,-9  ;Neutral jumping velocity (x, y)
jump.back = -2   ;Jump back Speed (x, y)
jump.fwd = 2.25       ;Jump forward Speed (x, y)
runjump.back = -2.55,-8.1 ;Running jump speeds (opt)
runjump.fwd = 4,-8.1      ;.
airjump.neu = 0,-8.1      ;.
airjump.back = -2.55      ;Air jump speeds (opt)
airjump.fwd = 2.5         ;.

[Movement]
airjump.num = 0      ;Number of air jumps allowed (opt)
airjump.height = 35  ;Minimum distance from ground before you can air jump (opt)
yaccel = .5         ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching

;---------------------- Integer variable list ----------------------

; var(0):= 1110, 3020, 10995, 1101, 1104, 3110, 7701, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7702, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 2222, 18010, 18020
; var(1):= 180, 190, 1110, 7701, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7702, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 9741, -1
; var(2):= 4450, 550, 560, 570, 1000, 1100, 2500, 3000, 3100, 1101, 7701, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7702, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 9741, -2
; var(3):= 2500, 1101, 7701, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7702, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 9741, 6750
; var(4):= 7701, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7702, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 9741
; var(5):= 7701, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7702, 7740, 7741, 7742, 7743, 7744, 7745, 7746
; var(6):= 7701, 7702
; var(8):= -2
; var(9):= 9741
;var(10):= 220, 560, 561, 570, 571, 1005, 4000, 1800, 2000, -1
;var(11):= 561, 571, 8000, 1005
;var(12):= 8000
;var(13):= 800, 810
;var(14):= 3100
;var(15):= 3102
;var(18):= 550, -2
;var(19):= 1101, 1104
;var(20):= 1101, 1104, 7500
;var(23):= 3004, 3005, 1820, 1825
;var(25):= 1910
;var(30):= 4001, -2
;var(31):= -2
;var(32):= -2
;var(36):= 200, 210, 220, 221, 230, 400, 410, 420, 600, 610, 620, -2
;var(37):= 100, 501, 511, 520, 530, 551, 560, 570, -2
;var(40):= -2
;var(42):= 3102, -2
;var(43):= -2
;var(55):= -2
;var(58):= 9741

;---------------------- Float variable list ----------------------

; fvar(0):= 1110
; fvar(1):= 1101
; fvar(2):= 1101
; fvar(3):= 1101
; fvar(4):= 1101
; fvar(5):= -2
;fvar(10):= 100, 200, 210, 220, 221, 230, 4450, 400, 410, 420, 600, 610, 620, 501, 511, 515, 520, 530, 551, 560, 561, 570, 571, 1000, 1006, 1007, 1008, 1100, 1105, -2
;fvar(12):= 3100, 1900
;fvar(26):= 1910





